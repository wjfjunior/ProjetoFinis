@model Finis.Models.Cidade

@{
    ViewBag.Title = "Nova Cidade";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(e => e.estadoId, new { id = "estadoId" })

    <div class="container" id="formulario">
        <form class="col s12">
            <div class="row">

                @Html.ValidationSummary(true, "", new { @class = "validate" })

                <div class="row">
                    <div class="input-field col s12">
                        @Html.LabelFor(model => model.nome)
                        @Html.EditorFor(model => model.nome, new { htmlAttributes = new { @class = "validate" } })
                        @Html.ValidationMessageFor(model => model.nome, "", new { @class = "validate" })
                    </div>
                </div>
                @*<div class="row">
                    <div class="input-field col s12">
                        @Html.DropDownListFor(model => model.estadoId, (SelectList)ViewBag.Estados, "Selecione o estado", htmlAttributes: new { @class = "validate" })
                        @Html.ValidationMessageFor(model => model.estadoId, "", new { @class = "validate" })
                    </div>
                </div>*@
                <div class="row">
                    <div class="input-field col s12">
                        @Html.EditorFor(model => model.estadoNome, new { htmlAttributes = new { @type = "text", @id = "estadoNome", @class = "autocomplete" } })
                        @Html.LabelFor(model => model.estadoNome)
                        @Html.ValidationMessageFor(model => model.estadoNome, "", new { @class = "validate" })
                    </div>
                </div>

                <br />
                <div class="row">
                    <button class="btn waves-effect waves-light" onClick="location.href='@Url.Action("Index","Cidades")'" type="button" name="action">
                        <i class="fa fa-arrow-left" aria-hidden="true"></i>
                        Voltar
                    </button>
                    <button class="btn waves-effect waves-light" type="submit" name="action">
                        Salvar
                        <i class="fa fa-plus" aria-hidden="true"></i>
                    </button>
                </div>
            </div>
        </form>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="https://cdnjs.cloudflare.com/ajax/libs/materialize/0.99.0/js/materialize.min.js"></script>
    <script type="text/javascript">

        var dados = {};

         function RecuperaID(string)
         {
             var id = string.substr(0, string.indexOf(' '));

             if (!isNaN(id))
             {
                 return parseInt(id);
             }
             else
             {
                 alert("Por favor selecione uma opção");
             }
         }

         $(document).ready(function () {
             //$('select').material_select();

             var erro = "@ViewBag.Erro";

             if (erro != "" && erro != null && erro != undefined)
             {
                 alert("Erro: " + erro);
             }

            $.ajax({
                type: 'GET',
                url: '@Url.Action("DropboxEstados", "Cidades")',
                success: function (response) {
                    var resultado = JSON.parse(response);

                    for (i = 0; i < resultado.lista.length; i++)
                    {
                        dados[resultado.lista[i].id + " - " + resultado.lista[i].nome + "/" + resultado.lista[i].sigla] = null; 
                    }

                    $('input.autocomplete').autocomplete({
                        data: dados,
                        limit: 5,
                        onAutocomplete: function (val) {

                            $('#estadoId').val(RecuperaID(val));
                        },
                    });
                }
            });
         });

    </script>
}

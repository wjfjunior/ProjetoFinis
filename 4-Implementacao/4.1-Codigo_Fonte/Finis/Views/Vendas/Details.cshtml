@model Finis.Models.Venda

@using Finis.Models

@{
    ViewBag.Title = "Visualizar Registro de Venda";
}

<script type="text/javascript">

    function SelectedIndexChanged() {

        var idCliente = $('#idCliente').val();

        $.ajax({
            type: 'GET',
            url: '@Url.Action("RecuperaCreditosCliente", "Vendas")',
                data: { id: idCliente },
                dataType: 'json',
                success: function (data) {

                    $('#credEsp').val(data.creditoEspecial);
                    $('#credParc').val(data.creditoParcial);
                    Materialize.updateTextFields();
                }
            });
    }

    function carregaDetalhes(id) {

             $.ajax({
                 type: "GET",
                 url: "@Url.Action("Detalhes", "Vendas")",
                 data: { id: id },
                 dataType: "json",
                 success: function (dados) {
                     obj = JSON.parse(dados.Resultado);
                     preencheModalDetalhes(obj);
                 }
        });
    }

    function preencheModalDetalhes(obj) {

        document.getElementById('nome').innerHTML = obj.nome;
        document.getElementById('precoCompra').innerHTML = SubstituirCampoNulo(obj.precoCompra);
        document.getElementById('precoVenda').innerHTML = SubstituirCampoNulo(obj.precoVenda);
        document.getElementById('quantidadeEstoque').innerHTML = SubstituirCampoNulo(obj.quantidadeEstoque);
        document.getElementById('estoqueMinimo').innerHTML = SubstituirCampoNulo(obj.estoqueMinimo);
        document.getElementById('descricao').innerHTML = SubstituirCampoNulo(obj.descricao);
    }

    function SubstituirCampoNulo(campo) {

        if (campo == null || campo == "")
            return " - "
        else
            return campo;
    }

</script>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="container" id="formulario">

        @Html.ValidationSummary(true, "", new { @class = "validate" })
        @Html.Hidden("itemId", new { id = "itemId" })

        <form class="col s12">
            <div class="row">
                <div class="input-field col s8">
                    @Html.DropDownListFor(model => model.clienteId, (SelectList)ViewBag.Clientes, "Cliente", new { @readonly = "readonly", @id = "idCliente", @class = "validate" })
                    @Html.ValidationMessageFor(model => model.clienteId, "", new { @class = "text-danger" })
                </div>
                <div class="input-field col s2">
                    <label class="active" for="credEsp">Crédito especial</label>
                    <input type="text" name="credEsp" id="credEsp" readonly>
                </div>
                <div class="input-field col s2">
                    <label class="active" for="credParc">Crédito parcial</label>
                    <input type="text" name="credParc" id="credParc" readonly>
                </div>
            </div>
            <div class="row">
                <div id="divItens" class="input-field col s12">
                    @{
                        Html.RenderPartial("~/Views/Vendas/ListarItensEditar.cshtml", Model.itensVenda);
                    }
                </div>
            </div>
            <br /><br /><br />
            <div class="row">
                <div class="input-field col s3">
                    @{ Html.EnableClientValidation(false); }
                    @Html.TextBoxFor(model => model.dataCompra, new { @id = "date", @readonly = "readonly", Style = "color:#000000;" })
                    @{ Html.EnableClientValidation(true); }
                </div>
                <div class="input-field col s5">
                    @Html.TextBoxFor(model => model.formaPagamentoString, new { @class = "validate", @id = "formaPagamento", @name = "formaPagamento", @readonly = "readonly", Style = "color:#000000;" })
                   
                </div>
                <div class="input-field col s2">
                    @Html.LabelFor(model => model.desconto, htmlAttributes: new { @class = "validate" })
                    @{ Html.EnableClientValidation(false); }
                    @Html.TextBoxFor(model => model.desconto, new { @id = "desconto", @class = "validate", @readonly = "readonly", Style = "color:#000000;" })
                    @{ Html.EnableClientValidation(true); }
                </div>
                <div class="input-field col s2">
                    @Html.LabelFor(model => model.descontoPorcentagem, htmlAttributes: new { @class = "validate" })
                    @{ Html.EnableClientValidation(false); }
                    @Html.TextBoxFor(model => model.descontoPorcentagem, new {@id = "descontoPorcentagem", @class = "validate", @readonly = "readonly", Style = "color:#000000;" })
                    @{ Html.EnableClientValidation(true); }
                </div>
            </div>
            <div class="row">
                <div class="input-field col s3">
                    @Html.LabelFor(model => model.subtotal, htmlAttributes: new { @class = "validate" })
                    @{ Html.EnableClientValidation(false); }
                    @Html.TextBoxFor(model => model.subtotal, new { @id = "subtotal", @class = "validate", @readonly = "readonly", Style = "color:#000000;" })
                    @{ Html.EnableClientValidation(true); }
                </div>
                <div class="input-field col s3">
                    @Html.LabelFor(model => model.creditoParcial, htmlAttributes: new { @class = "validate" })
                    @{ Html.EnableClientValidation(false); }
                    @Html.TextBoxFor(model => model.creditoParcial, new {@id = "creditoParcial", @class = "validate", @readonly = "readonly", Style = "color:#000000;" })
                    @{ Html.EnableClientValidation(true); }
                </div>
                <div class="input-field col s3">
                    @Html.LabelFor(model => model.creditoEspecial, htmlAttributes: new { @class = "validate" })
                    @{ Html.EnableClientValidation(false); }
                    @Html.TextBoxFor(model => model.creditoEspecial, new {@id = "creditoEspecial", @class = "validate", @readonly = "readonly", Style = "color:#000000;" })
                    @{ Html.EnableClientValidation(true); }
                </div>
                <div class="input-field col s3">
                    @Html.LabelFor(model => model.total, htmlAttributes: new { @class = "validate" })
                    @{ Html.EnableClientValidation(false); }
                    @Html.TextBoxFor(model => model.total, new { @id = "total", @class = "validate", @readonly = "readonly", Style = "color:#000000;" })
                    @{ Html.EnableClientValidation(true); }
                </div>
            </div>
            <div class="row">
                <div class="input-field col s3"></div>
                <div class="input-field col s3"></div>
                <div class="input-field col s3"></div>
                <div class="input-field col s3">
                    @Html.LabelFor(model => model.recebido, htmlAttributes: new { @class = "validate" })
                    @{ Html.EnableClientValidation(false); }
                    @Html.TextBoxFor(model => model.recebido, new {@id = "recebido", @class = "validate", @readonly = "readonly", Style = "color:#000000;" })
                    @{ Html.EnableClientValidation(true); }
                </div>
            </div>
            <div class="row">
                <div class="input-field col s3"></div>
                <div class="input-field col s3"></div>
                <div class="input-field col s3"></div>
                <div class="input-field col s3">
                    @Html.LabelFor(model => model.troco, htmlAttributes: new { @class = "validate" })
                    @{ Html.EnableClientValidation(false); }
                    @Html.TextBoxFor(model => model.troco, new { @id = "troco", @class = "validate", @readonly = "readonly", Style = "color:#000000;" })
                    @{ Html.EnableClientValidation(true); }
                </div>
            </div>
            <div class="row">
                <button class="btn waves-effect waves-light" onClick="location.href='@Url.Action("Index","Vendas")'" type="button" name="action">
                    <i class="fa fa-arrow-left" aria-hidden="true"></i>
                    Voltar
                </button>
            </div>
        </form>
    </div>
                        }

<!-- Estrutura do Modal de detalhes -->
<div id="modal1" class="modal">
    <div class="modal-content">
        <h5>Informações do registro</h5>

        <div class="row" id="linha-detalhes">
            <div class="col s6">
                <label>Nome:</label>
            </div>
            <div class="col s3">
                <label>Preço de venda:</label>
            </div>
            <div class="col s3">
                <label>Preço de Compra:</label>
            </div>
        </div>
        <div class="row" id="linha-detalhes">
            <div class="col s6">
                <label class="texto-detalhes" id="nome">.</label>
            </div>
            <div class="col s3">
                <label class="texto-detalhes" id="precoVenda">.</label>
            </div>
            <div class="col s3">
                <label class="texto-detalhes" id="precoCompra">.</label>
            </div>
        </div>

        <div class="row" id="linha-detalhes">
            <div class="col s3">
                <label>Quantidade em estoque:</label>
            </div>
            <div class="col s3">
                <label>Estoque mínimo:</label>
            </div>
        </div>
        <div class="row" id="linha-detalhes">
            <div class="col s3">
                <label class="texto-detalhes" id="quantidadeEstoque">.</label>
            </div>
            <div class="col s3">
                <label class="texto-detalhes" id="estoqueMinimo">.</label>
            </div>
        </div>

        <div class="row" id="linha-detalhes">
            <div class="col s12">
                <label>Descrição:</label>
            </div>
        </div>
        <div class="row" id="linha-detalhes">
            <div class="col s12">
                <label class="texto-detalhes" id="descricao">.</label>
            </div>
        </div>

    </div>
    <div class="modal-footer">
        <hr />
        <a href="#!" class=" modal-action modal-close waves-effect waves-green btn-flat">Fechar</a>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/materialize")
    <script type="text/javascript">

        $(document).ready(function () {
            $('select').material_select();
        });
        
        window.onload = function () {
            
            SelectedIndexChanged()
        }

    </script>
}
@model Finis.Models.Avaliacao

@{
    ViewBag.Title = "Nova Avaliação";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="container" id="formulario">

        @Html.ValidationSummary(true, "", new { @class = "validate" })

        <form class="col s12">
            <div class="row">
                <div class="input-field col s12">
                    @Html.DropDownListFor(model => model.clienteId, (SelectList)ViewBag.Clientes, "Cliente", htmlAttributes: new { @class = "validate" })
                    @Html.ValidationMessageFor(model => model.clienteId, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row">
                <div class="input-field col s4">
                    @{ Html.EnableClientValidation(false); }
                    @Html.EditorFor(model => model.dataEntrada, new { htmlAttributes = new { @id = "date", @class = "datepicker", @placeholder = "Data de entrada" } })
                    @{ Html.EnableClientValidation(true); }
                    @Html.ValidationMessageFor(model => model.dataEntrada, "", new { @class = "validate" })
                </div>
                <div class="input-field col s3">
                    @Html.LabelFor(model => model.quantidadeExemplares, htmlAttributes: new { @class = "validate" })
                    @Html.EditorFor(model => model.quantidadeExemplares, new { htmlAttributes = new { @class = "validate" } })
                    @Html.ValidationMessageFor(model => model.quantidadeExemplares, "", new { @class = "validate" })
                </div>
                <div class="input-field col s5">
                    @Html.EnumDropDownListFor(model => model.situacao, "Situação", htmlAttributes: new { @class = "validate", @id = "situacaoAvaliacao", @name = "situacaoAvaliacao" })
                    @Html.ValidationMessageFor(model => model.situacao, "", new { @class = "validate" })
                </div>
            </div>
            <div class="row">
                <div class="input-field col s5">
                    @Html.LabelFor(model => model.creditoEspecial, htmlAttributes: new { @class = "validate" })
                    @{ Html.EnableClientValidation(false); }
                    @Html.EditorFor(model => model.creditoEspecial, new { htmlAttributes = new { @class = "validate" } })
                    @Html.ValidationMessageFor(model => model.creditoEspecial, "", new { @class = "validate" })
                    @{ Html.EnableClientValidation(true); }
                </div>
                <div class="input-field col s5">
                    @Html.LabelFor(model => model.creditoParcial, htmlAttributes: new { @class = "validate" })
                    @{ Html.EnableClientValidation(false); }
                    @Html.EditorFor(model => model.creditoParcial, new { htmlAttributes = new { @class = "validate" } })
                    @Html.ValidationMessageFor(model => model.creditoParcial, "", new { @class = "validate" })
                    @{ Html.EnableClientValidation(true); }
                </div>
            </div>
            <div class="row">
                <button class="btn waves-effect waves-light" onClick="location.href='@Url.Action("Index","Avaliacoes")'" type="button" name="action">
                    <i class="fa fa-arrow-left" aria-hidden="true"></i>
                    Voltar
                </button>
                <button class="btn waves-effect waves-light" type="submit" name="action">
                    Salvar
                    <i class="fa fa-plus" aria-hidden="true"></i>
                </button>
            </div>
        </form>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">

        $(document).ready(function () {
            $('select').material_select();

                @*if (@ViewBag.CodErro != null && ViewBag.CodErro == 1) {

                    alert("Não é possível salvar uma nova avaliação na situação de CONCLUÍDO!");
                }*@

        });

        $('.datepicker').pickadate({
            format: 'dd/mm/yyyy',
            selectMonths: true,
            selectYears: 100,
        });

        window.onload = function () {
            document.getElementById("situacaoAvaliacao").onchange = function () {

                var valorSituacao = document.getElementById('situacaoAvaliacao').value;

                if (valorSituacao == 2)
                {
                    document.getElementById('situacaoAvaliacao').readOnly = false;
                }
                else
                {
                    document.getElementById('situacaoAvaliacao').readOnly = true;
                }
            }
        }

    </script>
}
@model Finis.Models.Estado

@{
    ViewBag.Title = "Editar Estado";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="container" id="formulario">
        <form class="col s12">
            <div class="row">

                @Html.ValidationSummary(true, "", new { @class = "validate" })
                @Html.HiddenFor(model => model.id)
                @Html.HiddenFor(e => e.paisId, new { id = "paisId" })
                @Html.HiddenFor(model => model.date_insert)
                @Html.HiddenFor(model => model.user_update)

                <div class="row">
                    <div class="input-field col s12">
                        @Html.LabelFor(model => model.nome)
                        @Html.EditorFor(model => model.nome, new { htmlAttributes = new { @class = "validate" } })
                        @Html.ValidationMessageFor(model => model.nome, "", new { @class = "validate" })
                    </div>
                </div>
                <div class="row">
                    <div class="input-field col s12">
                        @Html.LabelFor(model => model.sigla)
                        @Html.EditorFor(model => model.sigla, new { htmlAttributes = new { @class = "validate" } })
                        @Html.ValidationMessageFor(model => model.sigla, "", new { @class = "validate" })
                    </div>
                </div>
                @*<div class="row">
                    <div class="input-field col s12">
                        @Html.DropDownListFor(model => model.paisId, (SelectList)ViewBag.Paises, "Selecione o país", htmlAttributes: new { @class = "validate" })
                        @Html.ValidationMessageFor(model => model.paisId, "", new { @class = "validate" })
                    </div>
                </div>*@
                <div class="row">
                    <div class="input-field col s12">
                        @Html.EditorFor(model => model.paisNome, new { htmlAttributes = new { @type = "text", @id = "paisNome", @class = "autocomplete" } })
                        @Html.LabelFor(model => model.paisNome)
                        @Html.ValidationMessageFor(model => model.paisNome, "", new { @class = "validate" })
                    </div>
                </div>

                <br />

                <div class="row">
                    <button class="btn waves-effect waves-light" onClick="location.href='@Url.Action("Index","Estados")'" type="button" name="action">
                        <i class="fa fa-arrow-left" aria-hidden="true"></i>
                        Voltar
                    </button>
                    <button class="btn waves-effect waves-light" type="submit" name="action">
                        Salvar
                        <i class="fa fa-plus" aria-hidden="true"></i>
                    </button>
                </div>
            </div>
        </form>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

<script src="https://cdnjs.cloudflare.com/ajax/libs/materialize/0.99.0/js/materialize.min.js"></script>
<script type="text/javascript">

         var dadosPaises = {};

         function RecuperaID(string)
         {
             var id = string.substr(0, string.indexOf(' '));

             if (!isNaN(id))
             {
                 return parseInt(id);
             }
             else
             {
                 alert("Por favor selecione uma opção");
             }
         }

         $(document).ready(function () {
             //$('select').material_select();

             var erro = "@ViewBag.Erro";

             if (erro != "" && erro != null && erro != undefined)
             {
                 alert("Erro: " + erro);
             }

            $.ajax({
                type: 'GET',
                url: '@Url.Action("DropboxPaises", "Estados")',
                success: function (response) {
                    var resultado = JSON.parse(response);

                    for (i = 0; i < resultado.lista_paises.length; i++)
                    {
                        dadosPaises[resultado.lista_paises[i].id + " - " + resultado.lista_paises[i].nome] = null;
                    }

                    $('input.autocomplete').autocomplete({
                        data: dadosPaises,
                        limit: 5,
                        onAutocomplete: function (val) {

                            $('#paisId').val(RecuperaID(val));
                        },
                    });
                }
            });
         });

</script>
}

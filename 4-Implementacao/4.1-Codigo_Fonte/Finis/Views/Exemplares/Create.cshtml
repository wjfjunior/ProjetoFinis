@model Finis.Models.Exemplar

@{
    ViewBag.Title = "Novo Exemplar";
}

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="container" id="formulario">

        @Html.ValidationSummary(true, "", new { @class = "validate" })
        @Html.HiddenFor(model => model.editoraId, new { id = "editoraId" })

        <form class="col s12">
            <div class="row">
                <div class="input-field col s7">
                    @Html.LabelFor(model => model.nome, htmlAttributes: new { @class = "validate" })
                    @Html.EditorFor(model => model.nome, new { htmlAttributes = new { @class = "validate" } })
                    @Html.ValidationMessageFor(model => model.nome, "", new { @class = "validate" })
                </div>
                <div class="input-field col s2">
                    @Html.EnumDropDownListFor(model => model.conservacao, "Conservação", htmlAttributes: new { @class = "validate" })
                    @Html.ValidationMessageFor(model => model.conservacao, "", new { @class = "validate" })
                </div>
                <div class="input-field col s3">
                    @Html.LabelFor(model => model.isbn, htmlAttributes: new { @class = "validate" })
                    @Html.EditorFor(model => model.isbn, new { htmlAttributes = new { @id = "isbn", @class = "validate" } })
                    @Html.ValidationMessageFor(model => model.isbn, "", new { @class = "validate" })
                </div>
            </div>
            <div class="row">
                <div class="input-field col s2">
                    @Html.LabelFor(model => model.ano, htmlAttributes: new { @class = "validate" })
                    @Html.EditorFor(model => model.ano, new { htmlAttributes = new { @class = "validate" } })
                    @Html.ValidationMessageFor(model => model.ano, "", new { @class = "validate" })
                </div>
                <div class="input-field col s2">
                    @Html.LabelFor(model => model.edicao, htmlAttributes: new { @class = "validate" })
                    @Html.EditorFor(model => model.edicao, new { htmlAttributes = new { @class = "validate" } })
                    @Html.ValidationMessageFor(model => model.edicao, "", new { @class = "validate" })
                </div>
                <div class="input-field col s2">
                    @Html.LabelFor(model => model.peso, htmlAttributes: new { @class = "validate" })
                    @{ Html.EnableClientValidation(false); }
                    @Html.EditorFor(model => model.peso, new { htmlAttributes = new { @class = "validate" } })
                    @{ Html.EnableClientValidation(true); }
                    @Html.ValidationMessageFor(model => model.peso, "", new { @class = "validate" })
                </div>
                <div class="input-field col s2">
                    @Html.LabelFor(model => model.precoCompra, htmlAttributes: new { @class = "validate" })
                    @{ Html.EnableClientValidation(false); }
                    @Html.EditorFor(model => model.precoCompra, new { htmlAttributes = new { @class = "validate" } })
                    @{ Html.EnableClientValidation(true); }
                    @Html.ValidationMessageFor(model => model.precoCompra, "", new { @class = "validate" })
                </div>
                <div class="input-field col s2">
                    @Html.LabelFor(model => model.precoVenda, htmlAttributes: new { @class = "validate" })
                    @{ Html.EnableClientValidation(false); }
                    @Html.EditorFor(model => model.precoVenda, new { htmlAttributes = new { @class = "validate" } })
                    @{ Html.EnableClientValidation(true); }
                    @Html.ValidationMessageFor(model => model.precoVenda, "", new { @class = "validate" })
                </div>
                <div class="input-field col s2">
                    @Html.LabelFor(model => model.quantidadeEstoque, htmlAttributes: new { @class = "validate" })
                    @Html.EditorFor(model => model.quantidadeEstoque, new { htmlAttributes = new { @class = "validate" } })
                    @Html.ValidationMessageFor(model => model.quantidadeEstoque, "", new { @class = "validate" })
                </div>
            </div>
            <div class="row">
                <div class="input-field col s3">
                    @Html.DropDownList("idiomaId", (SelectList)ViewBag.idiomaId, "Idioma", htmlAttributes: new { @class = "validate" })
                    @Html.ValidationMessageFor(model => model.idiomaId, "", new { @class = "validate" })
                </div>
                <div class="input-field col s4">
                    @Html.EditorFor(model => model.editoraNome, new { htmlAttributes = new { @type = "text", @id = "editoraNome", @class = "autocomplete" } })
                    @Html.LabelFor(model => model.editoraNome)
                    @Html.ValidationMessageFor(model => model.editoraNome, "", new { @class = "validate" })
                </div>
                <div class="input-field col s3">
                    @Html.DropDownList("sessaoId", (SelectList)ViewBag.sessaoId, "Sessão", htmlAttributes: new { @class = "validate" })
                    @Html.ValidationMessageFor(model => model.sessaoId, "", new { @class = "validate" })
                </div>
                <div class="input-field col s2">
                    @Html.EnumDropDownListFor(model => model.vendaOnline, "Venda online?", htmlAttributes: new { @class = "validate" })
                    @Html.ValidationMessageFor(model => model.vendaOnline, "", new { @class = "validate" })
                </div>
            </div>
            <div class="row">
                <div class="input-field col s12">
                    @Html.LabelFor(model => model.descricao, htmlAttributes: new { @class = "validate" })
                    @Html.ValidationMessageFor(model => model.descricao, "", new { @class = "validate" })
                    @Html.TextAreaFor(model => model.descricao, new { @class = "materialize-textarea" })
                </div>
            </div>
            <div class="row">
                <button class="btn waves-effect waves-light" onClick="location.href='@Url.Action("Index","Exemplares")'" type="button" name="action">
                    <i class="fa fa-arrow-left" aria-hidden="true"></i>
                    Voltar
                </button>
                <button class="btn waves-effect waves-light" type="submit" name="action">
                    Salvar
                    <i class="fa fa-plus" aria-hidden="true"></i>
                </button>
            </div>
        </form>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/materialize")

    <script type="text/javascript">

         var dados = {};

         function RecuperaID(string)
         {
             var id = string.substr(0, string.indexOf(' '));

             if (!isNaN(id))
             {
                 return parseInt(id);
             }
             else
             {
                 alert("Por favor selecione uma opção");
             }
         }

         $(document).ready(function () {

             $('select').material_select();
             $('#descricao').trigger('autoresize');
             $("#isbn").mask("ISBN 999-99-999-9999-9"); 

             var erro = "@ViewBag.Erro";

             if (erro != "" && erro != null && erro != undefined)
             {
                 alert("Erro: " + erro);
             }

            $.ajax({
                type: 'GET',
                url: '@Url.Action("DropboxEditoras", "Exemplares")',
                success: function (response) {
                    var resultado = JSON.parse(response);

                    for (i = 0; i < resultado.lista.length; i++)
                    {
                        dados[resultado.lista[i].id + " - " + resultado.lista[i].nome] = null;
                    }

                    $('input.autocomplete').autocomplete({
                        data: dados,
                        limit: 5,
                        onAutocomplete: function (val) {

                            $('#editoraId').val(RecuperaID(val));
                        },
                    });
                }
            });
         });

    </script>
}
